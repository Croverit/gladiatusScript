// ==UserScript==
// @name         Gladiatus Multiscript
// @namespace    pondfillers
// @version      6.2
// @description  Automatic Expeditions and Arena attacking script for the Romanian Gladiatus server
// @author       heunetik
// @match        https://*.gladiatus.gameforge.com/*
// @require      https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js
// @updateUrl    https://raw.githubusercontent.com/heunetik/gladiatusScript/master/gladiatusScript
// @icon         https://i.imgur.com/loWkqOF.jpg
// @grant        GM_setValue
// @grant        GM_getValue
// ==/UserScript==

(function() {
    'use strict';
    function addGlobalStyle(css) {
        var head, style;
        head = document.getElementsByTagName('head')[0];
        if (!head) { return; }
        style = document.createElement('style');
        style.type = 'text/css';
        style.innerHTML = css.replace(/;/g, ' !important;');
        head.appendChild(style);
    }
    function calcSkill(gold, skillCost) {
        var skills = [],
            total = 0;
        skillCost.forEach(function(cost) {
            while (total + cost <= gold) {
                skills.push(cost);
                total += cost;
            }
        });
        return skills;
    }
    function attackMethod(method, url, data, shash) {
        var request = {
            method: method,
            url: url,
            data: data + "&a=" + new Date().getTime() + "&sh=" + shash,
            onComplete: function(response) {
                eval(response);
            }
        };
        new Request(request).send();
    }
    //current page data
    var myLoc = location.toString();
    var fullLoc = location.origin.toString() + location.pathname.toString();
    // ------------------
    //current gold ammount
    var myGold = $("#sstat_gold_val").text().trim().replace('.','').toInt();
    //circus
    var pageCircus = Boolean(myLoc.match(/mod=arena&submod=serverArena&aType=3/));
    //arena
    var pageArena = Boolean(myLoc.match(/.+index\.php\?(mod\=arena)\&sh\=.+$/));
    //expeditii
    var pageExpeditii = Boolean(myLoc.match(/mod=location&loc=/));
    //dungeon
    var pageDungeon = Boolean(myLoc.match(/mod=dungeon&loc=0/));
    //training
    var pageTraining = Boolean(myLoc.match(/mod=training/));
    // --REPEAT--
    setInterval(function() {
        if (pageTraining == true) {
            var trainingCosts = $(".training_costs").map(function() {
                return $(this).text().trim().replace('.','').toInt();
            }).get();
            var upgradePlan = calcSkill(myGold, trainingCosts);
            GM_setValue("upgPlan", JSON.stringify(upgradePlan));
            GM_setValue("upgCost", JSON.stringify(trainingCosts));
        } else {
            var trainingButton = $("a[href*='mod=training']")[0];
            trainingButton.click();
        }
    }, 3600000);
    setInterval(function() {
        // SKILL ADDING
        var upgrades = JSON.parse(GM_getValue("upgPlan"));
        if(upgrades.length) {
            if (pageTraining == true) {
                var costs = JSON.parse(GM_getValue("upgCost"));
                var upgradeToDo = upgrades[0];
                upgrades.shift();
                var selectedUpgrade = costs.indexOf(upgradeToDo) + 1;
                var upgradeButton = $('a[href*="?mod=training&submod=train&skillToTrain=' + selectedUpgrade + '"]')[0];
                if(upgradeButton.length) {
                    upgradeButton.click();
                }
                /* Old approach - Might be useful
                upgrades.forEach(function (item) {
                    var selectedUpgrade = costs.indexOf(item) + 1;
                    upgrades.shift();
                    var upgradeButton = $('a[href*="?mod=training&submod=train&skillToTrain=' + selectedUpgrade + '"]')[0];
                    upgradeButton.click();
                });
                */
            }  else {
                var trainingButton = $("a[href*='mod=training']")[0];
                trainingButton.click();
            }
        } else {
            // console.log("u r broke man");
        }
        // ------------------
        //circus
        var circusTurmaLoad = document.getElementById("cooldown_bar_fill_ct").style.width;
        //arena
        var arenaLoad = document.getElementById("cooldown_bar_fill_arena").style.width;
        //expeditii
        var elemStyle = document.getElementById("cooldown_bar_fill_expedition").style.width;
        // dungeon
        var dungeonLoad = document.getElementById("cooldown_bar_fill_dungeon").style.width;
        // HP BAR
        var lifeStyle = document.getElementById("header_values_hp_bar_fill").style.width.toInt();
        if (elemStyle == "100%" && lifeStyle > 15) {
            if (pageExpeditii == true) {
                attack(null, '2', 2, 1, '');
            } else {
                var redirectButton = $('a[href*="&loc=1"]')[0];
                redirectButton.click();
            }
        }
        if (dungeonLoad == "100%") {
            if (pageDungeon == true) {
                var inDungeon = $("img[src*='9186/img/dungeons/']").length;
                if (inDungeon) {
                    var attackDungeon = $("img[src='9186/img/combatloc.gif']")[0];
                    attackDungeon.click();
                } else {
                    var clickDiff = $("input[value='Normal']")[0];
                    clickDiff.click();
                }
                //var dungId = $("input[name='dungeonId']").val();
            } else {
                var clickDungeon = $("#cooldown_bar_dungeon>a")[0];
                clickDungeon.click();
            }
        }
        if(arenaLoad == "100%") {
            if(pageArena == true) {
                var testing = $(".attack:last").attr("onClick").toString();
                var returnedArray = testing.match(/startFight\(this\,\s(.+?)\)/);
                attackMethod("get", "ajax/doArenaFight.php", "did=" + returnedArray[1], secureHash);
            } else {
                var clickArena = $("#cooldown_bar_arena>a")[0];
                clickArena.click();
            }
        }
        if(circusTurmaLoad == "100%") {
            if(pageCircus == true) {
                var users = document.getElementsByClassName("attack");
                var seconds = new Date() / 1000;
                seconds = seconds.toInt().toString();
                seconds = seconds[seconds.length - 1] / 2;
                seconds = seconds.toInt();
                console.log(seconds);
                users[seconds].click();
            } else {
                var clickCircusTurma = $("#cooldown_bar_ct>a")[0];
                clickCircusTurma.click();
            }
        }
        /*
        LEGACY VERSION - ATTACKS FIRST USER IN LIST
        if(circusTurmaLoad == "100%") {
            if(pageCircus == true) {
                // attack
                var testing = $(".attack").attr("onClick").toString();
                var returnedArray = testing.match(/startProvinciarumFight\(this\,\s3\,\s(.+?)\,\s(.+?)\,\s.+$/);
                attackMethod("get", "ajax.php", "mod=arena&submod=doCombat&aType=" + 3 + "&opponentId=" + returnedArray[1] + "&serverId=" + returnedArray[2] + "&country=" + "ro", secureHash);
            } else {
                var clickCircusTurma = $("#cooldown_bar_ct>a")[0];
                clickCircusTurma.click();
            }
        }
        */
    }, 1000);
})();